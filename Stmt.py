"""
This code provides the classes for the AST expressions
It is autogenerated from tools/GenerateAst.py
"""

from typing import Any, List
from Token import Token
import Expr

class Stmt:
    pass

class Block(Stmt):
    def __init__(self, statements: List[Stmt]):
        self.statements = statements

    def accept(self, visitor: Any) -> Any:
        return visitor.visitBlockStmt(self)

class Expression(Stmt):
    def __init__(self, expression: Expr.Expr):
        self.expression = expression

    def accept(self, visitor: Any) -> Any:
        return visitor.visitExpressionStmt(self)

class Print(Stmt):
    def __init__(self, expression: Expr.Expr):
        self.expression = expression

    def accept(self, visitor: Any) -> Any:
        return visitor.visitPrintStmt(self)

class Var(Stmt):
    def __init__(self, name: Token, initializer: Expr.Expr):
        self.name = name
        self.initializer = initializer

    def accept(self, visitor: Any) -> Any:
        return visitor.visitVarStmt(self)
